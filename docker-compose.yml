version: '3.5'
services:
  api1:
    # API - Instância 01
    #image: vhogemann/rinha-de-backend-2023-fsharp:latest
    build: src/App
    hostname: api1
    depends_on:
      - postgres
      - redis
    expose:
      - "80"
    links:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.4GB'

  api2:
    # API - Instância 01
    #image: vhogemann/rinha-de-backend-2023-fsharp:latest
    build: src/App
    hostname: api2
    depends_on:
      - postgres
      - redis
    expose:
      - "80"
    links:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.4GB'
  redis:
    # Cache
    image: redis/redis-stack-server
    restart: always
    expose:
      - "6379"
    ports:
      - 9997:6379
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.5GB'
  nginx:
    # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.4GB'

  postgres:
    # Banco de dados
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "postgres" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    expose:
      - "5432"
    ports:
      - 9998:5432
    volumes:
      - ./bootstrap.sql:/docker-entrypoint-initdb.d/bootstrap.sql
    deploy:
      resources:
        limits:
          cpus: '0.80'
          memory: '1.4GB'
